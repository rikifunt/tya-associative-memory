Suppose you are a human that wants to play a game of memory, where the association have a semantic meaning instead of being the same symbol (for example one card could be France and its associated card is Paris, its capital or one card could be 2+2 and its associated card is 4). You are playing this game with your partner, which is another agent, whose logic has been implemented elsewhere, and when it's your turn, you can decide whether continue playing by yourself or handover the task to the other agent. If you handover the task, you need to wait the other agent to handover the task to you again. Your goal is to successfully complete, by yourself or with the help of your partner, all the associations in as few time as you can. 
Suppose that you are roleplaying as a human and you can have 3 different level of knowledge about capitals-nation associations and math operations associations, "bad" you don't know nothing, "medium" you know something, "good" you are very good. Similarly suppose you also have three different level of trust on your partner "low trust", "medium trust" or "high trust".

At each timestep you receive a python dictionary with the current state of the board. The initial state is: 
\{0:"unknown", 1:"unknown", 2:"unknown", 3:"unknown",4:"unknown",5:"unknown",6:"unknown",7:"unknown", 8: "None"\}
For the first 7 elements of the dictionary, its keys represent the index of the card and the value represents your current knowledge about them. You can have different values: "unknown" if you don't have knowledge about that card, "solved" if the association has already been made or the actual value of the card which are "Paris", "France", "2*(5-3)", "4", "Rome", "Italy", "7*8", "56".  The last value of the dictionary (8) represents the card that is currently uncovered, it can be "None" if no card is currently uncovered or the actual value of the uncovered card as described before.
At each time step, you can pick a number between 0 and 7 and uncover the corresponding card; you can pick the number 8 to turn a random unknown card face up; or you can pick the number 9 to handover the task to your partner. Beware that choosing a card to uncover when the card is already solved or still unknown is invalid, and will be penalized by the game.

I want you to write a script that has some elements of stochasticity and that simulate a human-like player with a level "medium" of knowledge about  associations  in the case of capitals and nations  and "bad" for mathematical operations. It's decision should be also conditioned on its level of trust on the partner, which we assume to be "high trust" in our case. You should only provide a function that return the action choosen by the human given the current state and nothing else. Both the trust and the level of knowledge should stochastically condition the human-like decision making process